<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_weapon_generic</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
instance_create(x,y,lighting)

global.color_picker = c_white
global.color_primary = c_blue

//map_editor handles
bn_alpha_grad = NO_HANDLE
bn_grad1 = NO_HANDLE
bn_grad2 = NO_HANDLE
bn_grad3 = NO_HANDLE
bn_grad4 = NO_HANDLE
bn_alpha_tex = NO_HANDLE
bn_tex_above = NO_HANDLE
bn_tex = NO_HANDLE
bn_map_col0 = NO_HANDLE
bn_map_col1 = NO_HANDLE
bn_map_texs = NO_HANDLE
bn_col_alphas = NO_HANDLE
bn_export = NO_HANDLE

fade_time = 5*30
//blend for source blood pixel color
blood_src =  bm_src_alpha  
//blend for destination pixel color (pixel to be drawn to)
blood_dest = bm_one

blood_surf_src = bm_src_alpha
blood_surf_dest = bm_inv_src_alpha

draw_app_surface = 1
draw_surf_mode = 0

bfade_delay = 0
bfade_max = 30*3
surf_tex = -99
surf_blood = NO_HANDLE
surf_blocks = NO_HANDLE
surf_blocks_inverse = NO_HANDLE

lvl_tex = bg_none
lvl_grad1 = c_white
lvl_grad2 = c_white
lvl_grad3 = c_black
lvl_grad4 = c_black
lvl_alpha_grad = 0.825
lvl_alpha_tex = 0.4
lvl_tex_above = true

draw_mode = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///regenerate surfaces
if in_match() and not surface_exists(surf_blood) and truthval(global.gc[GC_SURFACES,1])
{
    free_level_surfaces()
    regen_level_surfaces()
    background_drawer.recompute_parallax = true
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///map editor gui
if global.map_editor and in_match()
{
    var tex_h = 96
    var tex_w = 96
    
    if not instance_exists(bn_map_texs)
    {
        bn_map_texs = instance_create(WVIEW/2-128,tex_h/2+48,bn_meditor)
        bn_map_texs.height = tex_h
        bn_map_texs.width = tex_w
        bn_map_texs.descr = "Background Texture"
        bn_map_texs.image_is_bg = true
        bn_map_texs.uses_capture = true
        bn_map_texs.image_stretch = true
        bn_map_texs.is_texture = true
        bn_map_texs.image_crop = true
    }
    
    if not instance_exists(bn_tex)
    {
        bn_tex = instance_create(WVIEW/2+128,tex_h/2+48,bn_meditor)
        bn_tex.height = tex_h
        bn_tex.width = tex_w
        bn_tex.descr = "Platform Texture"
        bn_tex.image_is_bg = true
        bn_tex.uses_capture = true
        bn_tex.image_stretch = true
        bn_tex.is_texture = true
        bn_tex.image_crop = true
    }
    
    var xst = 96
    var yst = 48
    var vsep = 68
    var hsep = 64*6
    
    if not instance_exists(bn_alpha_grad)
    {
        bn_alpha_grad = instance_create(xst,yst,bn_meditor)
        bn_alpha_grad.descr = "Platform Background Alpha"
        bn_alpha_grad.is_slider = true
    }
    yst+= vsep
    if not instance_exists(bn_grad1)
    {
        bn_grad1 = instance_create(xst,yst,bn_meditor)
        bn_grad1.descr = "Platform Color 1"
        bn_grad1.is_color = true
    }
    yst+= vsep
    if not instance_exists(bn_grad2)
    {
        bn_grad2 = instance_create(xst,yst,bn_meditor)
        bn_grad2.descr = "Platform Color 2"
        bn_grad2.is_color = true
    }
    yst+= vsep
    if not instance_exists(bn_grad3)
    {
        bn_grad3 = instance_create(xst,yst,bn_meditor)
        bn_grad3.descr = "Platform Color 3"
        bn_grad3.is_color = true
    }
    yst+= vsep
    if not instance_exists(bn_grad4)
    {
        bn_grad4 = instance_create(xst,yst,bn_meditor)
        bn_grad4.descr = "Platform Color 4"
        bn_grad4.is_color = true
    }
    yst+= vsep
    if not instance_exists(bn_alpha_tex)
    {
        bn_alpha_tex = instance_create(xst,yst,bn_meditor)
        bn_alpha_tex.descr = "Platform Texture Alpha"
        bn_alpha_tex.is_slider = true
    }
    yst+= vsep
    if not instance_exists(bn_tex_above)
    {
        bn_tex_above = instance_create(xst,yst,bn_meditor)
        bn_tex_above.descr = "Platform Texture Floats?"
        bn_tex_above.is_toggle = true
    }
    yst+= vsep
    //xst+= hsep
    if not instance_exists(bn_map_col0)
    {
        bn_map_col0 = instance_create(xst,yst,bn_meditor)
        bn_map_col0.descr = "Background Color Top"
        bn_map_col0.is_color = true
    }
    yst+= vsep
    if not instance_exists(bn_map_col1)
    {
        bn_map_col1 = instance_create(xst,yst,bn_meditor)
        bn_map_col1.descr = "Background Color Bottom"
        bn_map_col1.is_color = true
    }
    yst+= vsep
    if not instance_exists(bn_col_alphas)
    {
        bn_col_alphas = instance_create(xst,yst,bn_meditor)
        bn_col_alphas.descr = "Background Color Alpha"
        bn_col_alphas.is_slider = true
    }
    yst+= vsep
    if not instance_exists(bn_export)
    {
        bn_export = instance_create(xst,yst,bn_meditor)
        bn_export.descr = ""
        bn_export.text = "Export Map Colors"
        //bn_export.is_color = true
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///free surfaces
free_level_surfaces()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///level surfaces
if room = rm_login or truthval(global.gc[GC_SURFACES,1])
{
    recompute_level_colors()
    regen_level_surfaces()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///free surfaces
free_level_surfaces()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw fx
if not net_manager.tg_blood.active return false

if bfade_delay
    bfade_delay--    

if (surface_exists(surf_blood) and surface_exists(surf_blocks_inverse) and surface_exists(surf_tex))
{
    if room = rm_login or truthval(global.gc[GC_SURFACES,1])
    {
        if draw_surf_mode = 0 {
            surface_set_target(surf_tex)
            draw_set_blend_mode(bm_subtract)
            draw_surface_ext(surf_blocks_inverse,0,0,1,1,0,c_black,1)
            surface_reset_target()
            
            surface_set_target(surf_blood)
            draw_set_blend_mode(bm_subtract)
            draw_surface_ext(surf_blocks_inverse,0,0,1,1,0,c_black,1)
            
            draw_set_color(c_black)
            if bfade_delay
                draw_set_alpha(7/fade_time)
            else
                draw_set_alpha(12/fade_time)
    
            if nth_frame(5)
               draw_rectangle(0,0,room_width,room_height,false)
    
            draw_set_alpha(1)
            draw_set_color(c_white)
            draw_set_blend_mode(bm_normal)
            
            surface_reset_target()
            
            //draw_surface_ext(surf_blocks_inverse,0,0,1,1,0,c_white,1)
            //draw_set_blend_mode_ext(blood_surf_src,blood_surf_dest)
            draw_surface_part_ext(surf_tex,view_xview,view_yview,view_wview,view_hview,view_xview,view_yview,1,1,c_white,1)
            draw_surface_part_ext(surf_blood,view_xview,view_yview,view_wview,view_hview,view_xview,view_yview,1,1,c_white,1)
            draw_set_blend_mode(bm_normal)
        } else if draw_surf_mode =  1 {
            draw_surface_part_ext(surf_blocks,view_xview,view_yview,view_wview,view_hview,view_xview,view_yview,1,1,c_white,1)
        } else if draw_surf_mode =  2 {
            draw_surface_part_ext(surf_blocks_inverse,view_xview,view_yview,view_wview,view_hview,view_xview,view_yview,1,1,c_white,1)
        } else if draw_surf_mode =  3 {
            draw_surface_part_ext(surf_blood,view_xview,view_yview,view_wview,view_hview,view_xview,view_yview,1,1,c_white,1)
        }
    }
    else
    {
        free_level_surfaces()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="79">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw mode
draw_mode ++
if draw_mode &gt; 2
    draw_mode = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="76">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///adjust blends
if DEBUG
{
    blood_surf_src++
    if blood_surf_src &gt; 10
    blood_surf_src = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="75">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_app_surface ^= 1

if draw_app_surface
{
    surface_resize(application_surface,1,1)
} else
    surface_resize(application_surface,1024,768)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="74">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_surf_mode++

if draw_surf_mode &gt; 3
    draw_surf_mode = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="73">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///adjust blends
if DEBUG
{
    blood_surf_dest++
    if blood_surf_dest &gt; 10
    blood_surf_dest = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///adjust blends
//if DEBUG
{
    blood_dest--
    if blood_dest &lt; 0
    blood_dest = 10
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///adjust blends
//if DEBUG
{
    blood_src++
    if blood_src &gt; 10
    blood_src = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///adjust blends
//if DEBUG
{
    blood_dest++
    if blood_dest &gt; 10
    blood_dest = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///adjust blends
//if DEBUG
{
    blood_src--
    if blood_src &lt; 0
    blood_src = 10
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
