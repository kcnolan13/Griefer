<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_limb_generic</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-95</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surf = -99
surf = surface_create(room_width,room_height)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///render lights onto lighting surface


if not surface_exists(surf)
{
    if in_match()
    {
        free_lighting_surfaces()
        regen_lighting_surfaces()
    }
    else return false
}

surface_set_target(surf)
draw_clear_alpha(c_black,0)
surface_reset_target()

/*draw_set_color(c_white)
draw_set_alpha(0.8)
draw_rectangle(0,0,room_width,room_height,false)
draw_set_alpha(1)*/
/*
//render all lights
for (var i=0; i&lt;instance_number(kLight); i++)
{
    ID = instance_find(kLight,i)
    if not ID.loc
        printf("NOT A LOCAL LIGHT")
    if in_view(ID,64*4) and ID.active //and (ID.counter = 2 or ID.loc)
    {
        c = 0
        repeat (ID.intensity)
            draw_sprite_ext(ID.sprite, -1, ID.x, ID.y, ID.xscale, ID.yscale, ID.rot, ID.color, 1)

        draw_sprite_ext(ID.sprite, -1, ID.x, ID.y, ID.xscale, ID.yscale, ID.rot, ID.color, ID.intensity%1)
    }
}

draw_set_blend_mode(bm_normal)
surface_reset_target()*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///free lighting surface
free_lighting_surfaces()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create lighting surface
if DEBUG
    printf("allocating lighting surface")
    
regen_lighting_surfaces()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///free lighting surface
free_lighting_surfaces()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw lighting
if not in_match() return false
if not net_manager.tg_effects.active return false

index1 = 9
index2 = 3

draw_set_blend_mode(bm_add);   //--addative for more hardcore looking light

//draw_set_blend_mode_ext(9,1);   //--not addative for nice softer light
tol = 64

if surface_exists(surf)
draw_surface_part_ext(surf,min(0,view_xview-tol),min(0,view_yview-tol),max(room_width,view_wview+2*tol),max(room_height,view_hview+2*tol),min(0,view_xview-tol),min(0,view_yview-tol),1,1,c_white,1);

draw_set_blend_mode(bm_normal)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,4</point>
    <point>4,4</point>
  </PhysicsShapePoints>
</object>
