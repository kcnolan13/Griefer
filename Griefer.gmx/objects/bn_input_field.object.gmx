<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_1pixel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>modal_button</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
snap_2view = true
clickable = true
active = false

font = fnt_input

halign = fa_center
valign = fa_center

max_length = 20
min_length = 3
str_cursor = ""

str_cursor_delay = 15
str_cursor_counter = 0

sequence = 1

text_halign = fa_left
text_xoff = 5

auto_clear = true
auto_start = true
auto_capitalize = false

random_counter = 0
random_delay = room_speed*5
random_nth_frame = 120
randomize_username = false
can_randomize = false
have_randomized = false

text_default = "Username"
is_username = false
is_password = false

text = text_default
text_color_input = c_black
text_color_default = c_dkgray

alpha_max = 0.75
halign = fa_center
valign = fa_center

backspace_delay = 5
backspace_counter = 0
tab_delay = 20
tab_counter = 0

alarm[0] = 1

color = web_hsv(0,0,57)
active_color = web_hsv(216,35,100)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///modal_aligns
if not performed_aligns
modal_aligns()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///all dat ish
event_inherited()

if auto_capitalize or is_username
{
    text = capwords(text)
}

if active
{
    //PRESS BACKSPACE
    if keyboard_check(vk_backspace)
    {
        if not backspace_counter    
        {
            if string_length(text) &gt; 0
            {
                text = string_copy(text,1,string_length(text)-1)
                keyboard_string = text
            }
        }
        backspace_counter += real_speed(1)
        if backspace_counter &gt; backspace_delay
            backspace_counter = 0
    }
    else backspace_counter = sub_real(backspace_counter,1)
    
    //PRESS TAB
    if keyboard_check_pressed(vk_tab)
    {
        if not tab_counter
        {
            largest_sequence = sequence
            with bn_input_field
            {
                if sequence &gt; other.largest_sequence
                    other.largest_sequence = sequence
            }
            with bn_input_field
            {
                if sequence = other.sequence+1 or sequence = 1 and other.sequence = other.largest_sequence
                {
                    tab_counter = 1
                    cursor.x = x
                    cursor.y = y
                    //click into the next modal
                    event_perform(ev_mouse,ev_global_left_press)
                }
            }
            
            //click away from this modal
            event_perform(ev_mouse,ev_global_left_press)
        }
        
        tab_counter += real_speed(1)
        if tab_counter &gt; tab_delay
            tab_counter = 0
    }
    else tab_counter = 0
}

if active
{
    can_randomize = false
    text_color = text_color_input
}
else
{
    text_color = text_color_default
    if text = ""
    {
        text = text_default
        auto_clear = true
    }
}

//randomize username
random_counter ++
if is_username and randomize_username and can_randomize and random_counter &gt; random_delay and (have_randomized or random_counter &gt; random_nth_frame)
{
    have_randomized = true
    do_random = true
    with bn_input_field
    {
        if active
            other.do_random = false
    }
    if do_random
    {
        text = generate_name(0.01)
    }   
}

if global.using_gamepad 
{
    if gamepad_button_check_pressed(global.devno,global.cvals[C_JUMP]) 
    or gamepad_button_check_pressed(global.devno,global.cvals[C_SHOOT])
    {
        event_perform(ev_mouse,ev_global_left_press)
    }
    
    if gamepad_button_check(global.devno,global.cvals[C_JUMP]) 
    or gamepad_button_check(global.devno,global.cvals[C_SHOOT])
    {
        event_perform(ev_mouse,ev_global_left_button)
    }
}

str_cursor_counter ++
if str_cursor_counter &gt; str_cursor_delay
    str_cursor_counter = 0
    
if not str_cursor_counter
{
    if str_cursor = "|"
        str_cursor = ""
    else
        str_cursor = "|"
}

if clicked
    clicked --
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///get clicked
event_inherited()
    
if not modal_highlighted(id)
{
    exit_child = true
    active = false
    exit
}
    
if clicked exit
    clicked = 2

audio_play_sound(snd_click,2,false)
active = true
auto_start = false

if auto_clear = true
{
    auto_clear = false
    text = ""
    str_cursor = "|"
}

keyboard_string = text
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///add text

if keyboard_check(vk_backspace)
    exit

if not active and auto_start and popped_in
{
    auto_start = false
    cursor.x = x
    cursor.y = y
    event_perform(ev_mouse,ev_global_left_press)
}

if active and popped_in
{
    if auto_clear = true
    {
        auto_clear = false
        text = ""
    }

    if string_length(keyboard_string) &lt; max_length
    {
        text = keyboard_string
    } else {
        keyboard_string = text
    }   

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>0,0</point>
  </PhysicsShapePoints>
</object>
