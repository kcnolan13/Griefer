<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_launch_pad</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///properties and light and stuff
color = make_color_rgb(150,150,255)
intensity_max = 6
intensity_min = 1
intensity = intensity_min
intensity_dir = 1
intensity_lerp = 0.15

light = glr_lightsimple_create(spr_light_mask_point,-1, x, y-sprite_get_height(sprite_index)/3, color, 1,  intensity)
light.yscale = 0.0375
light.xscale = 0.27*image_xscale

launch_speed = 60

light.splosion_light = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///change light intensity and launch players

if intensity_dir = 1
    intensity_target = intensity_max
else
    intensity_target = intensity_min
    
intensity = lerp(intensity, intensity_target, intensity_lerp)

if abs(intensity-intensity_target) &lt; 0.005
    intensity_dir *= -1
    
light.intensity = intensity
light.rot = image_angle
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>COLLISIONS</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///launch ragdolls

for (var i=0; i&lt;instance_number(rag_generic); i++)
{
    dude = instance_find(rag_generic,i)
    if instance_place(x,y,dude)
    {
        launch_angle = image_angle+90 mod 360
        
        if launch_angle &gt; 270
        launch_angle -= 360
        
        //printf("launch_angle_before = "+launch_angle)
        
        //add some more verticality to the launch
        launch_angle = lerp(launch_angle,90,0.5)
        
        //printf("launch_angle REAL = "+launch_angle)
        
        dude.forx = trigx(20,launch_angle)
        dude.fory = trigy(20,launch_angle)
        
        with dude
        {
            physics_apply_impulse(x,y,forx,fory)
        }
        
        intensity = intensity_max*2
        intensity_dir = -1
        
        if not audio_is_playing(snd_launch_pad) and not net_manager.match_countdown and not net_manager.starting_match
            audio_play_sound(snd_launch_pad,2,false)
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///launch players

for (var i=0; i&lt;instance_number(player); i++)
{
    dude = instance_find(player,i)
    if instance_place(x,y,dude)
    {
        launch_angle = image_angle+90 mod 360
        
        if launch_angle &gt; 270
        launch_angle -= 360
        
        //printf("launch_angle_before = "+launch_angle)
        
        //add some more verticality to the launch
        launch_angle = lerp(launch_angle,90,0.5)
        
        //printf("launch_angle REAL = "+launch_angle)
        
        dude.id.hsp = trigx(launch_speed,launch_angle)
        dude.id.vsp = trigy(launch_speed,launch_angle)
        
        intensity = intensity_max*2
        intensity_dir = -1
        
        if not audio_is_playing(snd_launch_pad) and not net_manager.match_countdown and not net_manager.starting_match
            audio_play_sound(snd_launch_pad,2,false)
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///launch tossables

for (var i=0; i&lt;instance_number(tossable_generic); i++)
{
    tossable = instance_find(tossable_generic,i)
    if instance_place(x,y,tossable)
    {
        tossable.id.have_hit_target = true
        launch_angle = image_angle+90 mod 360
        
        if launch_angle &gt; 270
        launch_angle -= 360
        
        //printf("launch_angle_before = "+launch_angle)
        
        //add some more verticality to the launch
        launch_angle = lerp(launch_angle,90,0.5)
        
        //printf("launch_angle REAL = "+launch_angle)
        
        tossable.id.hsp = trigx(launch_speed,launch_angle)
        tossable.id.vsp = trigy(launch_speed,launch_angle)
        
        intensity = intensity_max*2
        intensity_dir = -1
        
        if not audio_is_playing(snd_launch_pad)
            audio_play_sound(snd_launch_pad,2,false)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,16</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
