<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>3</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stuff

cursor_width = 32

cursor_lerp_real = 0.15

points = 3

point_size_normal = 4
point_size_highlighted = 8
point_size = point_size_normal
point_size_lerp = 0.25

point_rad_normal = 16
point_rad_highlighted = 0
point_rad = point_rad_normal
point_rad_lerp = 0.25

highlighted = 0

rot_normal = 90
rot_highlighted = 90//+360
rot_lerp = 0.25
rot = rot_normal
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>801</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_cursor</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>-1</sprite>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start in middle of screen
//if global.using_gamepad
{
    x = room_width/2
    y = room_height/2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///no gamepad: control with mouse

if not global.using_gamepad
{
        
    x = mouse_x
    y = mouse_y 
}

var rad_target = point_rad_normal
var rot_target = rot_normal
var size_target = point_size_normal

if highlighted
{
    highlighted = sub_real(highlighted,1)
    
    rad_target = point_rad_highlighted
    rot_target = rot_highlighted
    size_target = point_size_highlighted
}

point_rad = lerp(point_rad,rad_target,point_rad_lerp)
rot = lerp(rot,rot_target,rot_lerp)
point_size = lerp(point_size,size_target,point_size_lerp)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw id and coords

if net_manager.snapshot_mode exit

if in_match() 
{
    do_draw = true
    
    with cursor_generic
    {
        if active and counter &gt; 2 and not match_starting() and not match_ending()
            other.do_draw = false
    }
    
    if not do_draw
        return false
}

var spr = icon_cursor_small
var xscale = cursor_width/sprite_get_width(spr)
var yscale = xscale

draw_sprite_ext(spr,image_index,(x-view_xview)*WVIEW/view_wview,(y-view_yview)*HVIEW/view_hview,xscale,yscale,image_angle,image_blend,image_alpha)
draw_set_color(c_white)

/*
draw_set_alpha(0.35)
draw_flash_compensate()

var pts = points*2
var ptsize = point_size*0.5
for (var i=0; i&lt;pts; i++)
{
    var ang = (rot-90)+i/pts*360
    var rad = point_rad*1.5*lerp(global.notification_scale,1,0.75)
    var drawx = x+trigx(rad,ang)
    var drawy = y+trigy(rad,ang)
    draw_circle(drawx,drawy,ptsize,false)
}*/

/*
draw_set_alpha(1)
draw_flash_compensate()
for (var i=0; i&lt;points; i++)
{
    var ang = rot+i/points*360
    var rad = point_rad*lerp(global.notification_scale,1,0.75)
    var drawx = x+trigx(rad,ang)
    var drawy = y+trigy(rad,ang)
    draw_circle(drawx,drawy,point_size,false)
}

draw_set_alpha(1)
draw_circle(x,y,point_size/2,false)*/



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,9</point>
    <point>9,9</point>
  </PhysicsShapePoints>
</object>
