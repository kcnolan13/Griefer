<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_input_field</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-101</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize
input_string = "kyle"
instantClear = false
input_active = false
label = "Username"
alarm[0] = room_speed/3
blink = false
max_length = 20
str_cursor = ""
backspace_counter = 0
backspace_hold_delay = 10
backspace_delay = backspace_hold_delay
tab_delay = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cursor blink
if not keyboard_check(vk_backspace)
    blink ^= 1
else
    blink = true
    
if blink and input_active
    str_cursor = "|"
else
    str_cursor = ""
    
alarm[0] = room_speed/3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.using_gamepad 
{
    if gamepad_button_check_pressed(global.devno,global.cvals[C_JUMP]) 
    or gamepad_button_check_pressed(global.devno,global.cvals[C_SHOOT])
    {
        event_perform(ev_mouse,ev_global_left_press)
    }
    
    if gamepad_button_check(global.devno,global.cvals[C_JUMP]) 
    or gamepad_button_check(global.devno,global.cvals[C_SHOOT])
    {
        event_perform(ev_mouse,ev_global_left_button)
    }
}


if not input_active exit



if tab_delay &gt; 0
tab_delay --

if keyboard_check(vk_backspace)
{
    backspace_counter++
    if backspace_counter &gt; backspace_delay
    {
        if string_length(keyboard_string) &gt; 0
        {
            keyboard_string = string_copy(keyboard_string,1,string_length(keyboard_string)-1)
            input_string = keyboard_string
        }
        backspace_delay = 1
        backspace_counter = 0
    }
}
else 
{
    backspace_counter = 0
    backspace_delay = backspace_hold_delay
}

if keyboard_check_pressed(vk_tab) and not tab_delay
{
    if input_active
    {
        tab_delay = 5
        input_active = false
        str_cursor = ""
        for (i=0; i&lt;instance_number(input_field); i++)
        {
            ID = instance_find(input_field,i)
            if ID.id != id
            {
                with ID
                {
                    tab_delay = 5
                    input_active = true
                    keyboard_string = ""
                    input_string = ""
                    str_cursor = "|"
                }
                break
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///toggle active

if !instance_place(x,y,cursor)
{
    input_active = false
    str_cursor = ""
}
else
{

if not audio_is_playing(snd_click) and not input_active
    audio_play_sound(snd_click,3,false)

input_active = true
keyboard_string = ""
str_cursor = "|"

    if instantClear = true
    {
        instantClear = true
        input_string = ""
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if input_active = true or instance_place(x,y,cursor)
    image_index = 1
else
    image_index = 0

draw_set_font(fnt_button)
    
draw_sprite(sprite_index,image_index,x,y)
draw_set_halign(fa_left)
draw_set_valign(fa_center)

draw_set_color(c_white)
draw_text(x,y+sprite_get_height(sprite_index)/2,input_string+str_cursor)
draw_set_color(c_white)
draw_text(x,y-sprite_get_height(sprite_index)/2,label)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///add text
if input_active=true
{
    if instantClear = true
    {
        instantClear = false
        input_string = ""
    }

    if string_length(keyboard_string) &lt; max_length
    {
        input_string = keyboard_string
    } else {
        keyboard_string = input_string
    }   

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
