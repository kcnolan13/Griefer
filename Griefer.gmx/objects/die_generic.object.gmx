<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_die</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-84</depth>
  <persistent>0</persistent>
  <parentName>character_generic</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inherit and specify some new constants
event_inherited()

squawked = false

varWrite("arm_animation_index",0)
varWrite("animation_index",0)
varWrite("animation_speed",0.01)
varWrite("animation_scale",PLAYER_SCALE)
varWrite("animation_direction",1)

varWrite("die",false)
varWrite("die_headshot",false)
varWrite("die_splosion",false)
varWrite("die_shotgun",false)
varWrite("fire_counter",0)
varWrite("fire_counter_max",room_speed*6)
varWrite("can_die",false)
varWrite("hit_dir",90)
varWrite("hit_force",FL_NO_FORCE)
varWrite("blood_color",c_yellow)

animation_walk()
pose_rifle()
varWrite("arms_posing",false)

initialize_physics()
blood_streamer = noone
track_head = false
created_rag = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CREATE THE RAGDOLL!

event_inherited()

if not created_rag and varRead("can_die")
{   
    visible = false
    varWrite("visible",false)
    created_rag = true
    rag_fdir = varRead("hit_dir")
    rag_frac_prob = 0
    
    //simple_popup("fdir",string(rag_fdir))
    
    if varRead("die_shotgun")
    {
        rag_force = random_range(2,4)
        rag_frac_prob = 0.45
        audio(snd_gnashed,2)
    } else if varRead("die_splosion")
    {
        rag_force = random_range(FORCE_SPLOSION-1,FORCE_SPLOSION+1)
        rag_frac_prob = 0.3
        audio(snd_gnashed,2)
        //audio(snd_gnashed,2)
    } else if varRead("die_headshot")
    {
        rag_force = 8
        rag_fdir = 90
        audio(snd_headshot,2)
        rag_exclusions[RAG_HEAD] = true
    } else
    {
        rag_force = 14
    }
    
    //override rag force sometimes
    if varRead("hit_force") != FL_NO_FORCE
    {
        rag_force = real(varRead("hit_force"))
    }
    
    rag_create_doll(rag_frac_prob,rag_force,rag_fdir)
}

//stick to the torso object
if created_rag
{
    if instance_exists(rags[RAG_TORSO])
    {
        x = rags[RAG_TORSO].x
        y = rags[RAG_TORSO].y
    }
    else
    {
        instance_destroy()
        exit
    }
}





/*
if instance_number(die_generic) &gt; global.dead_limit and random(3*global.dead_limit) &lt; 1
{
    instance_destroy()
    if instance_exists(blood_streamer)
    {
        with blood_streamer instance_destroy()
    }
    exit
}

if instance_exists(blood_streamer)
{
    blood_streamer.x = x
    blood_streamer.y = y
    
    blood_streamer.x = x+torso_x+varRead("animation_scale")*varRead("animation_drawxcale")*torso_xoffset
    blood_streamer.y = y+torso_y+varRead("animation_scale")*torso_yoffset
    
    if track_head
    {
        blood_streamer.spd /= 1.02
        blood_streamer.x = x+torso_x+varRead("animation_scale")*varRead("animation_drawxcale")*torso_xoffset+trigx(10*varRead("animation_drawxcale"),-1*torso_rot+90)
        blood_streamer.y = y+torso_y+varRead("animation_scale")*torso_yoffset+trigy(10,-1*torso_rot+90)
        blood_streamer.dir = -1*torso_rot+90
        if DEBUG
        {
            printf("tracking head --&gt; spawned "+blood_streamer.particles_spawned+" particles so far @ "+blood_streamer.x+", "+blood_streamer.y)
            printf("dir = "+blood_streamer.dir)
        }
        
        if varRead("animation_drawxcale") = -1
            blood_streamer.dir = 180 - blood_streamer.dir
            
        if varRead("animation_index") &gt; 15
        {
            blood_streamer.y -= 5
        }
            
    } else {
        
        desired_dir = (-1*torso_rot) mod 360
        if varRead("animation_index") &gt; 15
        {
            desired_dir += 180
            blood_streamer.spd /= 1.0325
            blood_streamer.y -= 10
        }
        
        if varRead("animation_drawxcale") = -1
            desired_dir = 180 - desired_dir
        
        blood_streamer.dir = desired_dir
        
    }
}

if varRead("die")
{
    animation_die()
    varWrite("animation_speed",SPD_DIE)
    varWrite("animation_index",0)
    varWrite("die",false)
    image_alpha = 10
    blood_streamer = spray_blood(x,y,3,0,1,2.6*room_speed,1.25,16,2,1)
    if not instance_exists(blood_streamer)
        printf("ERROR: blood_streamer does not exist")
}

if varRead("die_headshot")
{
    audio(snd_headshot,2)
    animation_die_headshot()
    varWrite("animation_speed",SPD_DIE_HEADSHOT)
    varWrite("animation_index",0)
    varWrite("die_headshot",false)
    image_alpha = 10
    
    track_head = true
    blood_streamer = spray_blood(x,y,4,90,0.5,4.5*room_speed,1.25,20,1,6)
    if not instance_exists(blood_streamer)
    {
        printf("ERROR: blood_streamer does not exist")
    }
    else
    {
        blood_streamer.part_override = true
    }
}

if varRead("animation_index") &gt;= varRead("animation_length") - 2
{
    varWrite("animation_index",varRead("animation_length")-1)
    varWrite("animation_speed",0)
}

//scr_basic_physics()

if varRead("animation_speed") = 0
{
    image_alpha -= 0.05
    if (image_alpha &lt; 0.05)
    {
        instance_destroy()
        exit
    }
}

//INHERITED EVENT
event_inherited()*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>30,31</point>
    <point>30,30</point>
  </PhysicsShapePoints>
</object>
