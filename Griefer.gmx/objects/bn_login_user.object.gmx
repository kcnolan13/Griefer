<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_puretxt_placeholder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>button_generic</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inherit and specify new label
event_inherited()

forced_enter = false

alert = ""
alert_alpha = 0
alert_fade = 0.05

time_since_active = 0
label = "Play"
field_username = instance_create(room_width/2-sprite_get_width(spr_input_field)/2,room_height/2,input_field)
field_username.label = "Name"
field_username.input_string = ""
alarm[0] = 1

field_password = instance_create(room_width/2-sprite_get_width(spr_input_field)/2,room_height/2+64*1.25,input_field)
field_password.label = "Password"
field_password.input_string = "abc123"

name_randomizer = instance_create(field_username.x, field_username.y, randomize_name)

puretxt=true
sprite_index = spr_puretxt

halign = fa_left
x = field_username.bbox_left
bn_create_new.x = field_username.bbox_right

txt_alpha_min = 0.5
ysweep = 64*0.5
ydir = 1
active = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set random username
field_username.input_string = generate_name(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ysweep

if global.using_gamepad 
{
    if gamepad_button_check_pressed(global.devno,global.cvals[C_JUMP]) 
    or gamepad_button_check_pressed(global.devno,global.cvals[C_SHOOT])
    {
        event_perform(ev_mouse,ev_global_left_press)
    }
    
    if gamepad_button_check(global.devno,global.cvals[C_JUMP]) 
    or gamepad_button_check(global.devno,global.cvals[C_SHOOT])
    {
        event_perform(ev_mouse,ev_global_left_button)
    }
}

if clicked
    clicked --
    
if alert_alpha &gt; 0
{
    alert_alpha -= alert_fade
    if alert_alpha &lt; alert_fade
        alet_alpha =0
}
if not field_username.input_active and not field_password.input_active
{
    time_since_active ++
    if time_since_active &gt; 30*2
    {
        field_username.input_string = generate_name(0)
        time_since_active = 0
    }
}
else time_since_active = 0

/*
if (y-ystart &lt; 2 and ydir = -1) or (ystart+ysweep-y &lt; 2 and ydir = 1)
{
    ydir *= -1
}

lerp_real_amount = 0.035

if ydir = 1
{
    
    with bn_login_user 
        y = lerp_real(y,ystart+other.id.ysweep,other.id.lerp_real_amount)
    with bn_create_new 
        y = lerp_real(y,ystart+other.id.ysweep,other.id.lerp_real_amount)
    with field_username 
        y = lerp_real(y,ystart+other.id.ysweep,other.id.lerp_real_amount)
    with field_password
        y = lerp_real(y,ystart+other.id.ysweep,other.id.lerp_real_amount)
}
else
{   
    with bn_login_user
        y = lerp_real(y,ystart,other.id.lerp_real_amount)
    with bn_create_new
        y = lerp_real(y,ystart,other.id.lerp_real_amount)
    with field_username
        y = lerp_real(y,ystart,other.id.lerp_real_amount)
    with field_password
        y = lerp_real(y,ystart,other.id.lerp_real_amount)
}*/

y = bn_create_new.y

event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if clicked exit

if instance_place(x,y,cursor) or forced_enter
{
    forced_enter = false
    clicked = 2
    printf("MAKING AUTHENTICATION ATTEMPT: "+field_username.input_string+" : "+field_password.input_string)
    if !instance_exists(processing)
    {
        authenticate(field_username.input_string,field_password.input_string)
        objVarWrite(net_manager,"pName",field_username.input_string)
        instance_create(x,y,processing)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw code
draw_set_color(make_color_rgb(60,60,60))
hoff = sprite_get_width(spr_input_field)
voff = 64*3
left = field_username.bbox_left-32
top = field_username.bbox_top-48
right = field_username.bbox_right+32
bottom = field_password.bbox_bottom+74

draw_set_alpha(1)
draw_rectangle(left,top,right,bottom,false)
draw_set_color(make_color_rgb(45,45,45))
draw_rectangle(left,bottom-48,right,bottom,false)
draw_set_color(make_color_rgb(20,20,20))
draw_rectangle(left,bottom-8,right,bottom,false)
draw_set_color(c_white)

if alert_alpha &gt; 0
{
    //draw alerts
    draw_set_font(fnt_hud)
    draw_set_alpha(alert_alpha)
    draw_set_color(make_color_rgb(150,0,0))
    draw_rectangle(left,top-48,right,top-16,false)
    draw_set_color(c_red)
    draw_rectangle(left,top-48,right,top-48+4,false)
    draw_set_halign(fa_center)
    draw_set_valign(fa_center)
    draw_set_color(c_white)
    draw_text((right+left)/2,top-32, alert)
    draw_set_alpha(1)
}


if room = rm_login
{
/*  shadow_scale = 0.25+0.0035*(y-ystart)
    draw_sprite_ext(spr_doll_shadow,0,room_width/2,room_height-2*64,2*shadow_scale,shadow_scale,0,c_white,0.8)
*/}

event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///perform left press
printf("pressed enter")
forced_enter = true
event_perform(ev_mouse,ev_global_left_press)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
