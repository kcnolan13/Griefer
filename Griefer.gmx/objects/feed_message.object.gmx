<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_1pixel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>-1</persistent>
  <parentName>modal_button</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inherit and define properties
event_inherited()
text = ""
alpha = 0
alpha_max = 100
alpha_highlight = 0
halign = fa_center
valign = fa_center
font = fnt_hud_big

netvars = ds_map_create()

show_text = true
deadguy = noone
deadguy_blood_color = c_red
avname1 = ""
avname2 = ""
avhead1 = -1
avhat1 = -1
avhead2 = -1
avhat2 = -1
avhead_scale = 1
weapon = -1
snap_2view = false
snap_obj = kill_feed
text_yoff = -15

lerp_ytarget = 0
lerp_ycurrent = 0
lerp_ystep = 0.25
highlightable = false

alarm[0] = 1

exit_child = false

hue = 0
sat = 0
val = 0
notif_scale = 1.25

modal_aligns()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///free ds map
if ds_exists(netvars,ds_type_map)
    ds_map_destroy(netvars)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///snap to snap obj
if instance_exists(snap_obj)
{
    x = snap_obj.x
    y = snap_obj.y-snap_obj.height/2+lerp_ycurrent
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///snap to snap obj
if instance_exists(snap_obj)
{
    x = snap_obj.x
    y = snap_obj.y-snap_obj.height/2+lerp_ycurrent
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///snap to snap_obj and find deadguy
event_inherited()

if not instance_exists(deadguy) and avname2 != ""
{
    var test = find_pname_avatar(avname2)
    if instance_exists(test)
    {
        deadguy = test
        deadguy_blood_color = objVarRead(deadguy,"blood_color")
    }
}

lerp_ycurrent = lerp(lerp_ycurrent,lerp_ytarget,lerp_ystep)

if instance_exists(snap_obj)
{
    x = snap_obj.x
    y = snap_obj.y-snap_obj.height/2+lerp_ycurrent
}

label = text
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///all dat ish
if not modal_highlighted(id)
{
    exit_child = true
    exit
}

if clicked exit
    clicked = 2

//printf("clicked: "+label)
//audio_play_sound(snd_click,2,false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///free ds map
if ds_exists(netvars,ds_type_map)
    ds_map_destroy(netvars)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw av heads and stuff
alpha_scaler = kill_feed.alpha_scaler
var alph = min(1,alpha)*alpha_scaler*alpha_scaler
if alph &gt; 0.1
{
    draw_set_alpha(alph)
    
    var head_xoff = 1.75*sprite_get_width(spr_head)/2*avhead_scale*scale
    
    //draw the weapon
    if weapon &gt; -1 and sprite_exists(weapon)
    {
        show_text = false
        var spr_width = sprite_get_bbox_right(weapon) - sprite_get_bbox_left(weapon)
        var spr_height = sprite_get_bbox_bottom(weapon) - sprite_get_bbox_top(weapon)
        var wepscale = (width*2/3)/max(0.0005,spr_width)
        
        if spr_height*wepscale &gt; height*1.25
            wepscale = height*1.25/spr_height //(height)/spr_height
            
        if weapon = spr_torque
            wepscale *= 1.5
            
        var wep_xoff = wepscale*(sprite_get_xoffset(weapon)-sprite_get_width(weapon)/2)
        var wep_yoff = wepscale*(sprite_get_yoffset(weapon)-sprite_get_height(weapon)/2)
        draw_sprite_ext(weapon,-1,x+wep_xoff,y+wep_yoff-15,wepscale,wepscale,0,c_white,draw_get_alpha())
    }
    
    if avhead1 &gt; -1 and sprite_exists(avhead1)
    {
        varWrite("helmet0",avhead1)
        if avhat1 &gt; -1 and sprite_exists(avhat1)
            varWrite("hat0",avhat1)
            
        var alph = draw_get_alpha()
        draw_set_alpha(alph*1)
        draw_avatar_head(x-width/2-head_xoff,y-10,id,0,avhead_scale*scale,1,FL_NOBAR)
        draw_set_alpha(average3(alph,1,1))
        draw_set_font(fnt_feed)
        draw_set_color(c_white)
        draw_set_halign(fa_left)
        draw_text(x-width/2-head_xoff*2,y,chop_string(avname1,9))
        draw_set_alpha(alph)
    }
    
    if avhead2 &gt; -1 and sprite_exists(avhead2)
    {
        //draw splats for dead guy
        if instance_exists(deadguy)
        {
            draw_splats(x+width/2+head_xoff,y-10,0.225,deadguy_blood_color,draw_get_alpha()/2)
        }
        varWrite("helmet0",avhead2)
        if avhat2 &gt; -1 and sprite_exists(avhat2)
            varWrite("hat0",avhat2)
        var alph = draw_get_alpha()
        draw_set_alpha(alph*1)
        draw_avatar_head(x+width/2+head_xoff,y-10,id,0,avhead_scale*scale,-1,FL_NOBAR)
        draw_set_alpha(average3(alph,1,1))
        draw_set_font(fnt_feed)
        draw_set_color(c_white)
        draw_set_halign(fa_right)
        draw_text(x+width/2+head_xoff*2,y,chop_string(avname2,9))
        draw_set_alpha(alph)
    }
}

draw_set_halign(fa_center)

if show_text
    event_inherited()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>0,0</point>
  </PhysicsShapePoints>
</object>
