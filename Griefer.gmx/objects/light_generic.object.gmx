<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_light0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize!
counter = 0
color = make_color_rgb(255,50,50)
intensity = 1.25
sprite = spr_light_mask_spot;
scale = random_range(0.5,1)
rot = 270
muzzle_length = 25

ID = instance_place(x,y,col_generic)
if instance_exists(ID)
    color = ID.col
    
ID = instance_place(x,y,intensity_generic)
if instance_exists(ID)
    intensity = ID.intensity
    
myLight = noone
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fix disappearing lights
counter++

if counter = room_speed
{
    myLight = glr_lightsimple_create(sprite, 0, x+trigx(muzzle_length,rot), y+trigy(muzzle_length,rot),color, 1, intensity);
    glr_lightsimple_set_rotation(myLight,rot)
    glr_lightsimple_set_scaling(myLight,scale,scale)
}

if counter &gt; room_speed
{
    if counter % 1 = 0
    {
        printf("recreating light")
        
        //if glr_light_get_active(myLight)
            //glr_lightsimple_destroy(myLight)
            
        //myLight = glr_lightsimple_create(sprite, 0, x, y,color, 1, intensity);
    }
    //glr_lightsimple_set_scaling(myLight,scale,scale)
    //glr_lightsimple_set_position(myLight,x+trigx(muzzle_length,rot),y+trigy(muzzle_length,rot))
    //glr_lightsimple_set_rotation(myLight,rot)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///light destroy
glr_light_destroy_all()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>23,11</point>
    <point>39,39</point>
  </PhysicsShapePoints>
</object>
