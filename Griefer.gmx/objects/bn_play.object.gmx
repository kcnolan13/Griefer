<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_limb_generic</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-101</depth>
  <persistent>0</persistent>
  <parentName>button_generic</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inherit and specify new label
event_inherited()

play_counter = 0

label = "Play"
active = false

timer = 0
clicked = false

puretxt = true
sprite_index = spr_puretxt
txt_menu = "Play"
txt_lobby = "Lobby"

visible = false

notif_scale_min = 0.9
notif_scale_max = 1.1
notif_lerp = 0.3
notif_scale = 1
notif_target = notif_scale_max
notif_pauser = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create play modals
if net_manager.menu_mode = "play" and not instance_exists(bn_play_modal) and not instance_exists(bn_start_matchmaking) and net_manager.room_counter &gt; room_speed*1.5
{
    left = net_manager.play_left
    top = net_manager.play_top
    width = 64*5
    height = 64*3
    vspacer = 32
    
    ID = instance_create(left,top,bn_play_modal)
    ID.text = global.cmode
    ID.color = make_colour_hsv(255*3/4,75,75)
    ID.width = width
    ID.height = height
    ID.play_bots = false
    ID.birth_delay = 3
    ID.text_halign = fa_right
    ID.text_valign = fa_bottom
    ID.font = fnt_play
    
    ID = instance_create(left,top+height+vspacer,bn_play_modal)
    ID.color = make_colour_hsv(255*1/3,75,75)
    ID.width = width
    ID.height = height
    ID.birth_delay = 10
    ID.text_halign = fa_right
    ID.text_valign = fa_bottom
    ID.font = fnt_play
}

if net_manager.menu_mode = "play"
    play_counter ++

if net_manager.menu_mode != "play" and (instance_exists(bn_play_modal) or instance_exists(bn_start_matchmaking))
{
    play_counter = 0
    with bn_play_modal
    {
        if not popped_in visible = false
        fade_out = true
    }
    
    with bn_start_matchmaking
    {
        if not popped_in visible = false
        fade_out = true
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create tab modals
if net_manager.menu_mode != "lottery_steal" and not instance_exists(bn_tab) and rtime() &gt; 5 and room != rm_login
{
    tabs[0] = bn_play_tab
    tabs[1] = bn_armory
    tabs[2] = bn_challenges
    tabs[3] = bn_stats
    tabs[4] = bn_settings
    tabs[5] = bn_logout
    
    imgs[0] = icon_play
    imgs[1] = icon_armory
    imgs[2] = icon_challenges
    imgs[3] = icon_friends
    imgs[4] = icon_settings
    imgs[5] = icon_quit
    
    hues[0] = 255*3.5/4
    hues[1] = 255
    hues[2] = 255*2.5/4
    hues[3] = 255*1.5/4
    hues[4] = 0
    hues[5] = 0
    
    hue = 0
    val = 0
    
    left = 10
    top = 5
    width = 72*2
    height = 72
    spacer = 10//room_width - (width*(array_length_1d(tabs)-1) + 3*left)
    //spacer /= array_length_1d(tabs)
    birth_delay = 4
    
    //create the tab background modal window thing
    ID = instance_create(0,0,tab_bg_modal)
    ID.birth_delay = 1
    ID.width = left+(width+spacer)*array_length_1d(tabs)
    ID.height = height+top*2
    ID.highlightable = false
    
    for (var i=0; i&lt;array_length_1d(tabs); i++)
    {
        ID = instance_create(left,top,tabs[i])
        ID.width = width
        ID.height = height
        ID.birth_delay = birth_delay
        
        if i = 0 or i=array_length_1d(tabs)-1 or i=4
        {
            val = 50
            sat = 0
            
            if i=4
                val = 140
        }
        else
        {
            val = 100
            sat = 50
        }
        
        ID.color = make_colour_hsv(hues[i],sat,val)
        ID.active_color = make_colour_hsv(hues[i],sat*3,val*1.25)
        ID.hue = hues[i]
        ID.sat = sat
        ID.val = val
        
        ID.text_halign = fa_left
        ID.text_xoff = 72+5
        ID.image = imgs[i]
        
        birth_delay += 3
        left += width+spacer
    }
}

if net_manager.menu_mode = "lottery_steal" and instance_exists(bn_tab)
{
    for (var i=0; i&lt;instance_number(bn_tab); i++)
    {
        b = instance_find(bn_tab,i)
        if b.object_index != bn_postmatch_done
            b.fade_out = true
    }
    with tab_bg_modal fade_out = true
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create randomize modal and post-match modal
if net_manager.menu_mode = "armory" and not instance_exists(bn_randomize)
{
    tabs[0] = bn_randomize

    if instance_exists(bn_logout)
        left = bn_logout.x + 32 + bn_logout.width
        
    top = 5
    width = 72*3.25
    height = 72
    birth_delay = 1
    
    hue = 255
    sat = 0
    val = 0
    
    for (var i=0; i&lt;1; i++)
    {
        ID = instance_create(left,top,tabs[i])
        ID.width = width
        ID.height = height
        ID.birth_delay = birth_delay
        
        ID.color = make_colour_hsv(hue,sat,val)
        ID.active_color = make_colour_hsv(hue,sat*4,125)
        
        ID.text_halign = fa_left
        ID.text_xoff = 72+5
        ID.image = icon_dice
        
        birth_delay += 10
    }
}

if room = rm_lobby and net_manager.menu_mode = "lobby"  and net_manager.came_from_match and not instance_exists(bn_postmatch) and instance_exists(bn_logout)
{
    if bn_logout.popped_in
    {
        tabs[0] = bn_postmatch
        
        left = bn_logout.x + 80
            
        top = 164
        width = 72*3.25
        height = 72
        birth_delay = 1
        
        hue = 90
        sat = 30
        val = 70
        
        for (var i=0; i&lt;1; i++)
        {
            ID = instance_create(left,top,tabs[i])
            ID.width = width
            ID.height = height
            ID.birth_delay = birth_delay
            
            ID.color = make_colour_hsv(hue,sat,val)
            ID.active_color = make_colour_hsv(hue,sat*4,val*2)
            
            ID.text_halign = fa_left
            ID.text_xoff = 72+5
            ID.image = icon_postmatch
            
            birth_delay += 10
        }
    }
}

if net_manager.menu_mode != "armory" and instance_exists(bn_randomize)
{
    with bn_randomize fade_out = true
}

if (net_manager.menu_mode != "lobby" or room != rm_lobby) and instance_exists(bn_postmatch)
{
    with bn_postmatch fade_out = true
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///default behavior
event_inherited()

if timer &gt; 0 
timer --

if clicked
clicked --

if room = rm_menu
    label = txt_menu
else
    label = txt_lobby

if label = txt_menu
{
    if net_manager.menu_mode = "play"
        active = true
    else
    {
        with (bn_start_matchmaking) instance_destroy()
        active = false
    }
}

if net_manager.menu_mode = "lottery_steal"
{
    visible = false
} else visible = true
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///scale notifications

notif_scale = lerp(notif_scale,notif_target,notif_lerp)

if abs(notif_scale-notif_target) &lt; 0.01 and not notif_pauser
{
    notif_pauser = 5
}

if notif_pauser
{
    notif_pauser --
    if not notif_pauser
    {
        if notif_target = notif_scale_min
            notif_target = notif_scale_max
        else
            notif_target = notif_scale_min
    }
}

global.notification_scale = notif_scale
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if not visible exit


if clicked exit
clicked = 2

audio_play_sound(snd_click,2,false)

printf("clicked: "+string(label))

if label = txt_menu
{
    if active = false
    {
        active = true
        net_manager.menu_mode = "play"
        /*
        known_modes[0] = "versus"
        known_modes[1] = "ffa"
        known_modes[2] = "tdm"
        known_modes[3] = "bot_versus"
        known_modes[4] = "bot_ffa"
        known_modes[5] = "bot_tdm"
        for (i=0; i&lt;array_length_1d(known_modes); i++)
        {
            ID = instance_create(sprite_get_width(spr_button)/2,64+(i+0.5)*sprite_get_height(spr_button),bn_start_matchmaking)
            ID.label = known_modes[i]
            switch (i)
            {
                case 0:
                    ID.label_subtitle = "1 on 1, "+string(net_manager.versus_kill_limit)+" Kill Limit"
                    break
                case 1:
                   ID.label_subtitle = "4-Player Free For All, "+string(net_manager.ffa_kill_limit)+" Kill Limit" 
                   break
                case 2:
                    ID.label_subtitle = "2 on 2, "+string(net_manager.tdm_kill_limit)+" Kill Limit"
                    break
                case 3:
                    ID.label_subtitle = "1 on 1, "+string(net_manager.versus_kill_limit)+" Kill Limit"
                    break
                case 4:
                    ID.label_subtitle = "4-Player Free For All, "+string(net_manager.ffa_kill_limit)+" Kill Limit"
                    break
                case 5:
                    ID.label_subtitle = "2 on 2, "+string(net_manager.tdm_kill_limit)+" Kill Limit"
                    break
            }
        }*/
    }
}
else
{
    net_manager.menu_mode = "lobby"
    active = true
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw only sometimes
//if room = rm_menu exit
event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
