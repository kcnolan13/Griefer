<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tossable_generic</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-80</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create logic

if not truthval(global.gc[GC_VIOLENT_CONTENT,1])
{
    alarm[0] = 1
    visible = false
    exit
}

alpha = 0.25
sprite = spr_blood2
intensity = 0.25

xscale = random_range(0.05,0.5)
//make it tougher to get big ones
if xscale &gt; 0.3
    xscale = random_range(0.05,0.5)
    
yscale = xscale//random_range(xscale-0.1,xscale+0.1)
grav = 2
hsp = 0
vsp = 0
counter = 0
rot = random(360)
blend = c_red//make_color_rgb(70,0,0)
destroy = 0
trailing = false
trailing_counter = 0
trailing_counter_max = room_speed*1.5
fade = 0
grav_original = -1
splatted = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///all dat ish
counter ++

if alpha &lt; 1
    alpha += 0.125

if trailing
    trailing_counter++
else
    trailing_counter = 0

if counter = 1
{
    grav_original = grav
}

if counter &gt; 1
{
    dir = point_direction(x,y,x+hsp,y+vsp) mod 360
    spd = point_distance(x,y,x+hsp,y+vsp)
}
    
if fade = 1
    intensity /= 1.25

if intensity &lt; 0.0005 or ((instance_number(blood_particle) &gt; 60 and random(60)&gt;59))
{
    instance_destroy() 
    exit
}


if collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,solid_generic,true,false) or collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,block2,true,false)
{
    if not trailing
    {
        trailing = true
        if random (10) &gt; 8
            instance_destroy() 
        scr_move_contact_object(solid_generic,dir+180,spd*3,1)
        hsp /= 4; vsp /= 10;
        grav = 0.025
    }
    
    if trailing_counter &gt; trailing_counter_max
    {
        //grav = 0
        //vsp /= 1.125
        instance_destroy()
        exit
    } else {
        vsp += grav
    }

    hsp /= 1.5
    
    if spd &lt; 0.1
    {
        instance_destroy()
        exit
    }
} else
{
    trailing = 0
    grav = grav_original
    vsp += grav
}

x += hsp
y += vsp

if x &lt; 0 or y &lt; 0 or x &gt; room_width or y &gt; room_height
{
    instance_destroy()
    exit
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw in air or to surface
if surface_exists(fx.surf_blood) and trailing
{
    surface_set_target(fx.surf_blood)
    //draw_set_blend_mode_ext(fx.blood_src,fx.blood_dest)
    draw_set_blend_mode(bm_normal)
    
    if xscale &gt; 0.01
        mult = 0.85
    else
        mult = 0.998
    
    yscale *= mult
    xscale *= mult
    
    prescaler = random_range(0.6,1)
    
    if not splatted
        prescaler = 1.5
    
    sprite_index = spr_splat
    
    if random(1) &lt; 0.6 or not splatted
    {
        //reset the big blood surface fade delay
        fx.bfade_delay = fx.bfade_max
        splatted = true
        draw_sprite_ext(spr_splat,floor(random_range(0,image_number+0.99)),x,y,xscale*prescaler,yscale*prescaler,rot,blend,0.85*alpha)
    }
    draw_set_blend_mode(bm_normal)
    surface_reset_target()
} else
{
    //draw_set_blend_mode_ext(fx.blood_src,fx.blood_dest)
    draw_set_blend_mode(bm_normal)
    //repeat(6)
    {
        xscala = xscale*spd/3
        if xscala &gt; 2.5 xscala = 2.5
        
        if xscala &lt; 0.2
            xscala = 0.2
        
        yscala = 1//average4(xscala,1,1,1)
        prescaler = 0.575
            
        draw_sprite_ext(sprite,0,x,y,xscale*xscala*prescaler,yscale*yscala*prescaler,dir,blend,0.65*alpha)
        
        //DRAW THE TRAJECTORY
        var xi = x
        var yi = y
        var tdir = dir
        var rigidity = 3
        var color = blend
        var width = 9
        var resolution = 1
        var length = 48
        var highlight = spr_none
        var highlight_interval = 1280
        var alpha1 = 0
        var alpha2 = 0.5
        var alpha3 = 0.5
        var flag = FL_DISAPPEAR
       // draw_trajectory(xi, yi, spd, tdir, grav, rigidity, color, width, resolution, length, highlight, highlight_interval, alpha1, alpha2, alpha3, flag)
        
    }
    draw_set_blend_mode(bm_normal)
}

if destroy = 1
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
