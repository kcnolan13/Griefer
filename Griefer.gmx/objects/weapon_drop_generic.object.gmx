<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_frag</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize

//properties
weapon = weapon_frag
respawn_delay = 5*30
wait_till_weapon_gone = false


//engine
respawn_counter = 1
pos_occupied = false
pos_was_occupied = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///spawn weapons when ready ---&gt; ONLY PLAYER 0 ACTUALLY DOES THIS
if not instance_exists(net_manager.local_player) 
{
    if rtime() &gt; 30*3
        printf("ERROR: local player does not exist")
        
    //always exit
    exit
}

if net_manager.local_player.object_index != player
    printf("ERROR: net_manager.local_player.object_index = "+string(net_manager.local_player.object_index))

var wep_at_pos = instance_place(x,y,weapon)
if wep_at_pos = noone and not respawn_counter
{
    respawn_counter = respawn_delay
} else if wep_at_pos {
    respawn_counter = 0
}

if respawn_counter
{
    respawn_counter --
    if not respawn_counter
    {
        //attempt to spawn weapon
        var usable_weapon = find_usable_weapon_spawned_by(id)
        if not usable_weapon
        {
            //SPAWN
            dropper_spawn_weapon()            
        } else
        {
            //can still maybe spawn a new one
            if not wait_till_weapon_gone
            {
                var wep_at_pos = instance_place(x,y,weapon)
                if wep_at_pos != noone
                {
                    //still might be able to spawn
                    if objVarRead(wep_at_pos,"spawner") != id or objVarRead(wep_at_pos,"been_picked_up")
                    {
                        //SPAWN
                        dropper_spawn_weapon() 
                    } else
                    {
                        if DEBUG
                            printf("unable to respawn weapon --&gt; already one at drop ... trying again in 10 sec.")

                        respawn_counter = 30*10
                    }
                }
                else
                {
                    //SPAWN
                    dropper_spawn_weapon() 
                }
            }
            else
            {
                if DEBUG
                    printf("unable to respawn weapon --&gt; still usable ... trying again in 10 seconds")

                respawn_counter = 30*10
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>29,19</point>
    <point>45,45</point>
  </PhysicsShapePoints>
</object>
