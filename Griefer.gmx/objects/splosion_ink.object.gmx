<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_splosion_generic</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-94</depth>
  <persistent>0</persistent>
  <parentName>splosion_generic</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///properties
event_inherited()


bleed_time = 30
blood_parts = 20
bxoff = 5
byoff = 5
blood_color = c_purple
bleed_strength = 90

initialize_physics()

audio(snd_ink,2)
counter = 0
part_off = 64*2

speed_multiplier = random_range(0.42,0.43)

life = room_speed*15/3
part_life = 8.25*room_speed

sys_smoke = part_system_create()

ps = part_type_create()
part_type_alpha3(ps,0.25,1,0)
part_type_shape(ps,pt_shape_smoke)
part_type_colour_mix(ps,make_color_rgb(0,0,0),make_color_rgb(60,25,112))
part_type_life(ps,3/4*part_life,part_life)
part_type_size(ps,7,13,0.025,0)
part_type_direction(ps,60,120,0,0.25)
part_type_speed(ps,0,3,0.015,0.1)
part_type_blend(ps,true)
part_system_depth(sys_smoke,depth)

em = part_emitter_create(sys_smoke)
part_emitter_region(sys_smoke,em,x-random(part_off),x+random(part_off),y-random(part_off),y+random(part_off),ps_shape_ellipse,ps_distr_gaussian)

part_emitter_burst(sys_smoke,em,ps,6)

//engine
varWrite("body_death_type","die")
varWrite("gib_distance",-1)

//visuals
sprite = spr_light_mask_splosion;
rubble_obj = rubble
intensity = 8
xscale = radius/360/1.5
yscale = radius/360/1.5
color = make_color_rgb(150,75,225)
intensity_divisor = 1.9
intensity_flicker = 0.2
scale_divisor = 1.025
scale_flicker = 0.05

//DAMAGE
radius = 64*6
damage = 4
varWrite("falloff_x1",radius/4)
varWrite("falloff_y1",1)
varWrite("falloff_x2",radius*2.25/3)
varWrite("falloff_y2",0.7)
varWrite("falloff_x3",radius)
varWrite("falloff_y3",0)


//sync muzzle flash with light params
flash_update_light()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///free memory and un-ink players
for (i=0; i&lt;instance_number(player); i++)
{
    dat_playa = instance_find(player,i)
    if objVarRead(dat_playa,"speed_multiplier") = speed_multiplier
    {
        printf("ink destroy --&gt; freeing player from ink")
        objVarWrite(dat_playa,"speed_multiplier",1)
        obj_update_real(dat_playa,"speed_multiplier",FL_NORMAL)
    }
}


if part_emitter_exists(sys_smoke,em)
    part_emitter_destroy(sys_smoke,em)

if part_system_exists(sys_smoke)
    part_system_destroy(sys_smoke)

event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///do physics and make particles

if bleed_time
{
    repeat(blood_parts)
    {
        dx = random_range(-1*bxoff,bxoff)
        dy = random_range(-1*byoff,byoff)
        bld = instance_create(x+dx,y+dy,blood_particle)
        bld.dir = random_range(0,360)
        bld.blend = blood_color
        var spd = bleed_strength
        {
            bld.spd = spd
            bld.hsp = trigx(spd,bld.dir)
            bld.vsp = trigy(spd,bld.dir)
        }
    }
    bleed_time--
    bleed_strength = average4(20,bleed_strength,bleed_strength,bleed_strength)
}

counter++

part_emitter_region(sys_smoke,em,x-random(part_off),x+random(part_off),y-random(part_off),y+random(part_off),ps_shape_ellipse,ps_distr_gaussian)

if counter &lt; life
{
    if random(1) &lt; 0.15
        part_emitter_burst(sys_smoke,em,ps,1)
}

if counter &gt; life+part_life
{
    printf("destroying smoke system")
    instance_destroy()
    exit
}

if varRead("local")
{
    for (ind=0; ind&lt;instance_number(player); ind++)
    {
        dat_playa = instance_find(player,ind)
        if counter &lt; life+part_life/4 and in_my_ink(dat_playa) and objVarRead(dat_playa,"alive") and objVarRead(dat_playa,"hp") &gt; 0 and dat_playa.alive_counter &gt; room_speed*2
        {
            objVarWrite(dat_playa,"speed_multiplier",speed_multiplier)
            obj_update_real(dat_playa,"speed_multiplier",FL_NORMAL)
            
            //hurt the player
            from_player = find_player(varRead("senderId"))
            printf("ink damaging player")
            damage_splosion()
        }
        else
        {
            //printf("player not in ink: "+objVarRead(dat_playa,"alive")+", "+objVarRead(dat_playa,"hp")+", "+dat_playa.alive_counter)
            if objVarRead(dat_playa,"speed_multiplier") = speed_multiplier
            {
                printf("freeing player from ink")
                objVarWrite(dat_playa,"speed_multiplier",1)
                obj_update_real(dat_playa,"speed_multiplier",FL_NORMAL)
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
