<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_basic_helmet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CREATE FIXTURE
fix = physics_fixture_create()

life = 0

if object_index != rag_generic and (object_index-rag_head &lt; getLength(global.bpart_limb_types))
{
    limb_type = global.bpart_limb_types[object_index-rag_head]
}

scale = 1
image_angoff = 0
do_bind = false
joint_xs[0] = 30 joint_ys[0] = 24

joint_dirs[0] = 0
joint_dirs[1] = 0

is_bound[0] = false
is_bound[1] = false
is_bound[2] = false
is_bound[3] = false

bullet_pushed = false

xscale = 1
yscale = 1

side = FL_LEFT


//blood constants
bleed_time = random_range(2*room_speed,4*room_speed)
bleed_strength_delay = bleed_time*2/3
bleed_strength_dec = 0.25
bleed_strength = random_range(16,18)

if object_index = rag_head
{
    bleed_strength += 5
}
else if object_index = rag_torso
{
    bleed_strength /= 3
}
else if object_index = rag_hat
{
    bleed_strength = 0
    bleed_time = 0
}


fade_delay = room_speed*10
alpha_dec = 0.025
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///FREE FIXTURE MEMORY
physics_fixture_delete(fix)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fade out and bleed
event_inherited()

life++

//FADE OUT CONTROL
if fade_delay
{
    fade_delay --
}
else
{
    image_alpha -= alpha_dec
    if image_alpha &lt; 0.05
        instance_destroy()
}

//STREAM BLOOD
if bleed_strength_delay
{
    bleed_strength_delay --
}
else
{
    bleed_strength -= bleed_strength_dec
}

//BLEED
for (var i=0; i&lt;getLength(joint_xs); i++)
{
    aoff = 0
    strength_mult = 1
    blood_parts = 1
    if object_index = rag_torso
    {
        if life &gt; room_speed/2 and (is_bound[0] or i &gt; 0)
        {
        //spray everywhere
        aoff = random_range(-20,20)
        }
        else if i=0 and not is_bound[0]
        {
            aoff = 0
            strength_mult = 4
            blood_parts = 2
            bleed_time += 0.75
        }
    }
    else
    {
        aoff = random_range(-1,1)
    }
    
    if object_index = rag_forearm
        aoff = 180
        
    jxs[i] = trigx(point_distance(0,0,joint_xs[i],joint_ys[i]),joint_dirs[i]+image_angle)
    jys[i] = trigy(point_distance(0,0,joint_xs[i],joint_ys[i]),joint_dirs[i]+image_angle)

    if not is_bound[i] and bleed_time
    {
        repeat(blood_parts)
        {
            bleed_time --
            ID = instance_create(x+jxs[i],y+jys[i],blood_particle)
            ID.dir = point_direction(x,y,joint_xs[i],joint_ys[i])+image_angle+aoff
            ID.blend = blood_color
            var spd = bleed_strength*strength_mult
            {
                ID.spd = spd
                ID.hsp = trigx(spd,ID.dir)
                ID.vsp = trigy(spd,ID.dir)
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///get pushed by bullets and explosions and whatnot
if bullet_pushed
    bullet_pushed --
    
if instance_place(x,y,bullet_generic) and not bullet_pushed
{
    ID = instance_place(x,y,bullet_generic)
    bullet_pushed = 4
    force = objVarRead(ID,"damage_body")*1.25
    fdir = real(objVarRead(ID,"direction"))
    physics_apply_force(x,y,trigx(force,fdir),trigy(force,fdir))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="solid_generic">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//COLLIDE!</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///physics draw debug

draw_sprite_ext(sprite_index,image_index,x,y,scale*xscale,scale*yscale,image_angle+image_angoff,image_blend,image_alpha)

if not in_match()
{
    draw_set_color(c_lime)
    draw_set_alpha(1)
    //draw_circle(x,y,10,false)
    physics_draw_debug()
    
    draw_set_color(c_red)
    for (var i=0; i&lt;getLength(joint_xs); i++)
    {
        if i = 1
            draw_set_color(c_lime)
        if i = 2
            draw_set_color(c_aqua)
            
        draw_circle(x+jxs[i],y+jys[i],3,false)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>31,33</point>
    <point>30,30</point>
  </PhysicsShapePoints>
</object>
